name: Run Tests
description: Run unit tests
inputs:
  tool4d_executable_path:
    required: true
    type: string
  project_path:
    required: true
    type: string    
  startup_method: 
    required: false
    type: string
  skip_onstartup: 
    required: false
    type: boolean  
  create_data: 
    required: false
    type: boolean
  dataless: 
    dataless: false
    type: boolean
outputs:
  stdout: 
    value: ${{ steps.test.outputs.stdout }}
  stderr: 
    value: ${{ steps.test.outputs.stderr }}  

runs:
  using: "composite"
  steps:

  - name: setup
    id: setup
    run: |
      tool4d_arguments=""
      if [ "${startup_method}" != '' ]; then
      echo "tool4d_arguments="--startup_method="+"\""+"${startup_method}"+"\"" >> $GITHUB_OUTPUT
      fi
      if [ "${skip_onstartup}" = 'true' ]; then
      echo "tool4d_arguments=${tool4d_arguments} --skip_onstartup" >> $GITHUB_OUTPUT
      fi
      if [ "${create_data}" = 'true' ]; then
      echo "tool4d_arguments=${tool4d_arguments} --create_data" >> $GITHUB_OUTPUT
      fi  
      if [ "${dataless}" = 'true' ]; then
      echo "tool4d_arguments=${tool4d_arguments} --dataless" >> $GITHUB_OUTPUT
      fi     
      echo "tool4d_arguments=${tool4d_arguments}" >> $GITHUB_OUTPUT
    shell: bash  
    env:
      startup_method: ${{ inputs.startup_method }}
      skip_onstartup: ${{ inputs.skip_onstartup }}
      create_data: ${{ inputs.create_data }}
      dataless: ${{ inputs.dataless }}

  - name: execute startup method
    id: test
    run: |
      "${TOOL4D_EXECUTABLE_PATH}" "${project_path}" --dataless 1>stdout.txt 2>stderr.txt
      echo "stdout=`cat stdout.txt`" >> $GITHUB_OUTPUT
      echo "stderr=`cat stderr.txt`" >> $GITHUB_OUTPUT
    shell: bash
    env:
      tool4d_executable_path: ${{ inputs.tool4d_executable_path }}
      tool4d_arguments: ${{ steps.setup.outputs.tool4d_arguments }}
      project_path: ${{ inputs.project_path }}        
        
