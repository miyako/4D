name: Run Tests
description: Run unit tests
inputs:
  tool4d_executable_path:
    required: true
    type: string
  project_path:
    required: true
    type: string    
  startup_method: 
    required: false
    type: string
  user_param: 
    required: false
    type: string  
  data: 
    required: false
    type: string      
  skip_onstartup: 
    required: false
    type: boolean  
  create_data: 
    required: false
    type: boolean
  dataless: 
    dataless: false
    type: boolean
  utility: 
    utility: false
    type: boolean    
outputs:
  stdout: 
    value: ${{ steps.test.outputs.stdout }}
  stderr: 
    value: ${{ steps.test.outputs.stderr }}  

runs:
  using: "composite"
  steps:

  - name: setup
    id: setup
    run: |
      if [ "${startup_method}" != '' ]; then
      tool4d_arguments=--startup-method=""\"""${startup_method}""\"
      fi
      if [ "${skip_onstartup}" = 'true' ]; then
      tool4d_arguments="${tool4d_arguments} --skip-onstartup"
      fi
      if [ "${create_data}" = 'true' ]; then
      tool4d_arguments="${tool4d_arguments} --create-data"
      fi  
      if [ "${dataless}" = 'true' ]; then
      tool4d_arguments="${tool4d_arguments} --dataless"
      fi
      if [ "${utility}" = 'true' ]; then
      tool4d_arguments="${tool4d_arguments} --utility"
      fi      
      if [ "${user_param}" != '' ]; then
      tool4d_arguments=--user-param=""\"""${user_param}""\"
      fi      
      if [ "${data}" != '' ]; then
      tool4d_arguments=--data=""\"""${data}""\"
      fi      
      echo "tool4d_arguments=${tool4d_arguments}" >> $GITHUB_OUTPUT
    shell: bash  
    env:
      startup_method: ${{ inputs.startup_method }}
      skip_onstartup: ${{ inputs.skip_onstartup }}
      create_data: ${{ inputs.create_data }}
      dataless: ${{ inputs.dataless }}

  - name: execute startup method
    id: test
    run: |
      echo `"${TOOL4D_EXECUTABLE_PATH}" "${project_path}" "${tool4d_arguments}" 1>stdout.txt 2>stderr.txt`
      ls .
      echo "stdout=`cat stdout.txt`" >> $GITHUB_OUTPUT
      echo "stderr=`cat stderr.txt`" >> $GITHUB_OUTPUT
    shell: bash
    env:
      tool4d_executable_path: ${{ inputs.tool4d_executable_path }}
      tool4d_arguments: ${{ steps.setup.outputs.tool4d_arguments }}
      project_path: ${{ inputs.project_path }}          
